using BuilderBuilder.Compilers;
using Xunit;

namespace BuilderBuilder.Test.Compilers;

public class RecordCompilerTest
{
    private readonly RecordCompiler _sut = new();

    [Fact]
    public void ShouldGenerateRecord()
    {
        var entity = new BuilderEntity(false)
        {
            Name = "Entity",
            Fields =
            {
                new Field("Guid", "Id"),
                new Field("string", "Name"),
                new Field("IList<string>", "Values")
            }
        };
        var result = _sut.Compile(entity);

        const string expected = @"// Autogenerated, manual changes could be overridden on regeneration
public record EntityBuilder
{
    public static EntityBuilder Default => new();

    public Guid Id { private get; init; }
    public string Name { private get; init; }
    public IList<string> Values { private get; init; } = new();

    public Entity Build() => new()
    {
        Id = Id,
        Name = Name,
        Values = Values,
    };
}
";
        Assert.Equal(expected, result);
    }
}